{"version":3,"sources":["img/cryptocurrency.png","components/Navbar.jsx","services/cryptoNewsApi.js","components/news.jsx","services/cryptoApi.js","components/cryptocurrencies.jsx","components/exchanges.jsx","components/homepages.jsx","components/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["Navbar","className","src","icon","size","Title","level","to","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoNewsHeaders","cryptoNewsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptoNews","query","newsCategory","count","url","headers","useGetCryptoNewsQuery","Text","Typography","News","Select","Option","simplified","cryptoNews","data","value","gutter","map","news","i","xs","sm","lg","hoverable","href","target","name","alt","image","thumbnail","contentUrl","description","substring","provider","moment","datePublished","startOf","fromNow","cryptoApiHeaders","createRequest","cryptoApi","getCryptos","getCryptoDeatils","coinId","useGetCryptosQuery","Cryptocurrencies","usegetCryptoDeatilsQuery","cryptosList","isFetching","useState","coins","cryptos","setCryptos","searchTerm","setSearchTerm","useEffect","filteredData","filter","coin","toLowerCase","includes","placeholder","onChange","e","currency","id","title","rank","extra","iconUrl","millify","price","marketCap","change","Exchanges","Homepage","stats","console","log","CryptoDetails","useParams","App","path","exact","style","color","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.77bd977a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React from \"react\"\r\nimport {Menu, Avatar, Button , Typography } from \"antd\"\r\nimport { Link } from \"react-router-dom\"\r\nimport {HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined ,MenuOutlined} from \"@ant-design/icons\"\r\nimport icon from \"../img/cryptocurrency.png\"\r\nimport \"../App.css\"\r\n\r\nconst Navbar = () => {\r\n    return(\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo-container\">\r\n                <Avatar src={icon} size=\"large\" />\r\n                <Typography.Title level={2} className=\"logo\">\r\n                    <Link to='/'>Cryptoverse</Link>\r\n                </Typography.Title>\r\n            </div>\r\n                <Menu theme=\"dark\">\r\n                    <Menu.Item icon = {<HomeOutlined />}>\r\n                        <Link to='/'>Home</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon = {<FundOutlined />}>\r\n                        <Link to='/cryptocurrencies'>Cryptocurrencies</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon = {<MoneyCollectOutlined />}>\r\n                        <Link to='/exchanges'>Exchanges</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon = {<BulbOutlined />}>\r\n                        <Link to='/news'>News</Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoNewsHeaders = {\r\n  \"x-bingapis-sdk\": \"true\",\r\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"207a459f19msh396ab55ea1e5740p143e09jsne17e9d089dc0\",\r\n};\r\n\r\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\r\n\r\nexport const cryptoNewsApi = createApi({\r\n  reducerPath: \"cryptoNewsApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) =>\r\n        createRequest(\r\n          `/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`\r\n        ),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\r\n","import {Select, Typography , Row, Col , Avatar, Card} from 'antd'\r\nimport moment from 'moment'\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi'\r\n\r\n\r\nconst {Text,Title} = Typography\r\nconst {Option} = Select\r\n\r\nconst News = ({simplified}) => {\r\n\r\n    const {data : cryptoNews} = useGetCryptoNewsQuery({newsCategory: 'Cryptocurrency' , count: simplified ? 6 : 12})\r\n    if(!cryptoNews?.value) return \"Loading....\"\r\n\r\n    return(\r\n        <Row gutter = {[24,24]}>\r\n            {cryptoNews.value.map((news,i) => (\r\n                <Col xs={24} sm={12} lg={8} key={i}>\r\n                    <Card hoverable className=\"news-card\">\r\n                        <a href={news.url} target=\"blank\">\r\n                            <div className=\"news-image-container\">\r\n                                <Title className=\"news-title\" level={4}>{news.name}</Title>\r\n                                <img  alt=\"News\" className=\"news-image\" src={ news?.image?.thumbnail?.contentUrl}/>\r\n                            </div>\r\n                            <p>\r\n                                {news.description > 100 ? `${news.description.substring(0,100)} ...` : `${news.description}`}\r\n                            </p>\r\n                            <div className=\"provider-container\">\r\n                                <div>\r\n                                    <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl} alt=\"Avatar\" />\r\n                                    <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                                </div>\r\n                                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n                            </div>\r\n                        </a>\r\n                    </Card>\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default News","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoApiHeaders = {\r\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"207a459f19msh396ab55ea1e5740p143e09jsne17e9d089dc0\",\r\n};\r\n\r\nconst baseUrl = \"https://coinranking1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: \"cryptoApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n    getCryptoDeatils: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCryptosQuery, usegetCryptoDeatilsQuery } = cryptoApi;\r\n","import millify from \"millify\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Card,Row,Col,Input } from \"antd\"\r\n\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\"\r\nimport { useState,useEffect } from \"react\"\r\n\r\nconst Cryptocurrencies = ({simplified}) => {\r\n    const count = simplified ? 10: 100;\r\n    const {data : cryptosList, isFetching} = useGetCryptosQuery(count);\r\n    const [cryptos, setCryptos] = useState(cryptosList?.data?.coins)\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n\r\n    useEffect(() =>{\r\n        const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()) )\r\n\r\n        setCryptos(filteredData)\r\n    }, [cryptosList,searchTerm])\r\n\r\n    if(isFetching) return \"loading. .. ...\";\r\n\r\n    return(\r\n        <>\r\n        {!simplified && (\r\n            <div className=\"search-crypto\">\r\n                <Input placeholder=\"Search crypto\" onChange={(e) => setSearchTerm(e.target.value)} />\r\n            </div>\r\n        )}\r\n        \r\n            <Row gutter={[32,32]} className=\"crypto-card-container\" >\r\n                {cryptos?.map( (currency) => (\r\n                    <Col xs={24} sm={12} lg ={6} className=\"crypto-card\" key={currency.id}>\r\n                        <Link key={currency.id} to={`/crypto/${currency.id}`}>\r\n                        <Card \r\n                            title={`${currency.rank} . ${currency.name}`} \r\n                            extra={<img className=\"crypto-image\" src = {currency.iconUrl} alt=\"crypto images\"/>}\r\n                            hoverable\r\n                        >\r\n                            <p>Price: {millify(currency.price)}</p>\r\n                            <p>Market Cap: {millify(currency.marketCap)}</p>\r\n                            <p>Daily Change: {millify(currency.change)}</p>\r\n                        </Card>\r\n                        </Link>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Cryptocurrencies","const Exchanges = () => {\r\n    return(\r\n        <h1>Exchanges</h1>\r\n    )\r\n}\r\n\r\nexport default Exchanges\r\n","import { Cryptocurrencies, News } from \".\"\r\nimport { Typography, Row, Col, Statistic } from \"antd\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useGetCryptosQuery } from \"../services/cryptoApi\"\r\nimport millify from \"millify\"\r\n\r\nconst Homepage = ({simplified}) => {\r\n    const {data ,isFetching} = useGetCryptosQuery();\r\n\r\n    if(isFetching) return \"..loading\"\r\n\r\n    const globalStats = data?.data?.stats;\r\n    console.log(data);\r\n    const {Title} = Typography\r\n    return(\r\n        <>\r\n            <Title level={2} className=\"heading\">Global Crypto Stats</Title>\r\n            <Row>\r\n                {/* <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\r\n                <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /></Col>\r\n                <Col span={12}><Statistic title=\"Total Market Cap\" value={millify(globalStats.totalMarketCap)}  /></Col>\r\n                <Col span={12}><Statistic title=\"Total 24h Volume\" value={millify(globalStats.total24hVolume)}  /></Col>\r\n                <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)}  /></Col> */}\r\n            </Row>\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">Top 10 Cryptocurrencies in the world</Title>\r\n                <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show More</Link></Title>\r\n            </div>\r\n            <Cryptocurrencies simplified />\r\n            <div className=\"home-heading-container\">\r\n                <Title level={2} className=\"home-title\">Latest Crypotcureency News</Title>\r\n                <Title level={3} className=\"show-more\"><Link to=\"/news\">Show More</Link></Title>\r\n            </div>\r\n            <News simplified />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Homepage","import React, { useState } from 'react';\r\nimport HTMLReactParser from 'html-react-parser';\r\nimport { useParams } from 'react-router-dom';\r\nimport millify from 'millify';\r\nimport { Col, Row, Typography, Select } from 'antd';\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\n\r\n\r\nimport {usegetCryptoDeatilsQuery} from '../services/cryptoApi'\r\n\r\nconst CryptoDetails = () => {\r\n    const {coinId} = useParams();\r\n    const [timePeriod, setTimePeriod] = useState('7d')\r\n    // const {data ,isFetching} = usegetCryptoDeatilsQuery(coinId)\r\n\r\n    // const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\r\n\r\n    // const cryptoDetails = data?.data?.coin;\r\n    // const stats = [\r\n    //     { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\r\n    //     { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    //     { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\r\n    //     { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\r\n    //     { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\r\n    // ];\r\n\r\n    // const genericStats = [\r\n    //     { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n    //     { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n    //     { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n    //     { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    //     { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\r\n    // ];\r\n\r\n    return( \r\n        <>\r\n            <h1>Coin id is : {coinId}</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CryptoDetails;","import React from \"react\";\nimport { Switch, Link, Route } from \"react-router-dom\";\nimport { Layout, Typography, Space } from \"antd\";\nimport {\n  Navbar,\n  Homepage,\n  Cryptocurrencies,\n  Exchanges,\n  News,\n  CryptoDetails,\n} from \"./components\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Switch>\n              <Route path=\"/\" exact>\n                <Homepage />\n              </Route>\n              <Route path=\"/exchanges\" exact>\n                <Exchanges />\n              </Route>\n              <Route path=\"/cryptocurrencies\" exact>\n                <Cryptocurrencies />\n              </Route>\n              <Route exact path=\"/crypto/:coinId\">\n                <CryptoDetails />\n              </Route>\n              <Route path=\"/news\" exact>\n                <News />\n              </Route>\n            </Switch>\n          </div>\n        </Layout>\n\n        <div className=\"footer\">\n          <Typography.Title\n            level={5}\n            style={{ color: \"white\", textAlign: \"center\" }}\n          >\n            CrypotVerse <br />\n            All rights reserved\n          </Typography.Title>\n          <Space>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/exchanges\">Exchanges</Link>\n            <Link to=\"/news\">News</Link>\n          </Space>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport { cryptoApi } from \"../services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n  },\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./app/store\";\n\nReactDOM.render(\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}